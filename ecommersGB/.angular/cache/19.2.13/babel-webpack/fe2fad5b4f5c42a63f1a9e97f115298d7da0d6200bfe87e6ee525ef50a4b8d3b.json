{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport { Validators, ReactiveFormsModule } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nfunction RegistroComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.…µ…µelementStart(0, \"div\", 9);\n    i0.…µ…µtext(1, \"\\u26A0\\uFE0F Email inv\\u00E1lido\");\n    i0.…µ…µelementEnd();\n  }\n}\nfunction RegistroComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.…µ…µelementStart(0, \"div\", 9);\n    i0.…µ…µtext(1, \"\\u26A0\\uFE0F Contrase\\u00F1a requerida\");\n    i0.…µ…µelementEnd();\n  }\n}\nfunction RegistroComponent_p_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.…µ…µelementStart(0, \"p\", 9);\n    i0.…µ…µtext(1);\n    i0.…µ…µelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.…µ…µnextContext();\n    i0.…µ…µadvance();\n    i0.…µ…µtextInterpolate(ctx_r0.mensaje);\n  }\n}\nfunction RegistroComponent_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.…µ…µelementStart(0, \"div\", 10);\n    i0.…µ…µtext(1, \" \\u2705 Usuario creado con \\u00E9xito\\n\");\n    i0.…µ…µelementEnd();\n  }\n}\nexport let RegistroComponent = /*#__PURE__*/(() => {\n  class RegistroComponent {\n    constructor(fb, http, router) {\n      this.fb = fb;\n      this.http = http;\n      this.router = router;\n      this.mensaje = '';\n      this.mostrarToast = false;\n      this.formulario = this.fb.group({\n        email: ['', [Validators.required, Validators.email]],\n        password: ['', [Validators.required, Validators.minLength(4)]],\n        rol: ['usuario']\n      });\n    }\n    campoInvalido(campo) {\n      const control = this.formulario.get(campo);\n      return !!(control && control.invalid && (control.dirty || control.touched));\n    }\n    registrarUsuario() {\n      if (this.formulario.invalid) {\n        this.mensaje = '‚ö†Ô∏è Complet√° todos los campos correctamente.';\n        return;\n      }\n      const usuario = this.formulario.value;\n      console.log('üì§ Enviando usuario al backend:', usuario);\n      this.http.post('http://localhost:4000/api/usuarios', usuario).subscribe({\n        next: res => {\n          console.log('‚úÖ Usuario registrado con √©xito:', res);\n          this.mensaje = '';\n          this.mostrarToast = true;\n          setTimeout(() => {\n            this.mostrarToast = false;\n            this.router.navigate(['/login']);\n          }, 4000);\n        },\n        error: err => {\n          console.error('‚ùå Error al registrar usuario:', err);\n          this.mensaje = err.error?.message || '‚ùå Error al registrar el usuario.';\n        }\n      });\n    }\n    static {\n      this.…µfac = function RegistroComponent_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || RegistroComponent)(i0.…µ…µdirectiveInject(i1.FormBuilder), i0.…µ…µdirectiveInject(i2.HttpClient), i0.…µ…µdirectiveInject(i3.Router));\n      };\n    }\n    static {\n      this.…µcmp = /*@__PURE__*/i0.…µ…µdefineComponent({\n        type: RegistroComponent,\n        selectors: [[\"app-registro\"]],\n        decls: 16,\n        vars: 5,\n        consts: [[1, \"registro-container\"], [3, \"ngSubmit\", \"formGroup\"], [\"for\", \"email\"], [\"id\", \"email\", \"type\", \"email\", \"formControlName\", \"email\"], [\"class\", \"error\", 4, \"ngIf\"], [\"for\", \"password\"], [\"id\", \"password\", \"type\", \"password\", \"formControlName\", \"password\"], [\"type\", \"submit\"], [\"class\", \"toast-exito\", 4, \"ngIf\"], [1, \"error\"], [1, \"toast-exito\"]],\n        template: function RegistroComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.…µ…µelementStart(0, \"div\", 0)(1, \"h2\");\n            i0.…µ…µtext(2, \"\\uD83D\\uDCDD Crear cuenta\");\n            i0.…µ…µelementEnd();\n            i0.…µ…µelementStart(3, \"form\", 1);\n            i0.…µ…µlistener(\"ngSubmit\", function RegistroComponent_Template_form_ngSubmit_3_listener() {\n              return ctx.registrarUsuario();\n            });\n            i0.…µ…µelementStart(4, \"label\", 2);\n            i0.…µ…µtext(5, \"Email:\");\n            i0.…µ…µelementEnd();\n            i0.…µ…µelement(6, \"input\", 3);\n            i0.…µ…µtemplate(7, RegistroComponent_div_7_Template, 2, 0, \"div\", 4);\n            i0.…µ…µelementStart(8, \"label\", 5);\n            i0.…µ…µtext(9, \"Contrase\\u00F1a:\");\n            i0.…µ…µelementEnd();\n            i0.…µ…µelement(10, \"input\", 6);\n            i0.…µ…µtemplate(11, RegistroComponent_div_11_Template, 2, 0, \"div\", 4);\n            i0.…µ…µelementStart(12, \"button\", 7);\n            i0.…µ…µtext(13, \"Crear cuenta\");\n            i0.…µ…µelementEnd()();\n            i0.…µ…µtemplate(14, RegistroComponent_p_14_Template, 2, 1, \"p\", 4);\n            i0.…µ…µelementEnd();\n            i0.…µ…µtemplate(15, RegistroComponent_div_15_Template, 2, 0, \"div\", 8);\n          }\n          if (rf & 2) {\n            i0.…µ…µadvance(3);\n            i0.…µ…µproperty(\"formGroup\", ctx.formulario);\n            i0.…µ…µadvance(4);\n            i0.…µ…µproperty(\"ngIf\", ctx.campoInvalido(\"email\"));\n            i0.…µ…µadvance(4);\n            i0.…µ…µproperty(\"ngIf\", ctx.campoInvalido(\"password\"));\n            i0.…µ…µadvance(3);\n            i0.…µ…µproperty(\"ngIf\", ctx.mensaje);\n            i0.…µ…µadvance();\n            i0.…µ…µproperty(\"ngIf\", ctx.mostrarToast);\n          }\n        },\n        dependencies: [CommonModule, i4.NgIf, ReactiveFormsModule, i1.…µNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n        styles: [\"form[_ngcontent-%COMP%]{max-width:400px;margin:60px auto;background-color:#111;padding:24px;border-radius:10px;box-shadow:0 4px 15px #0000004d;color:#fff;font-family:Segoe UI,sans-serif}label[_ngcontent-%COMP%]{display:block;margin-bottom:6px;font-weight:500;font-size:14px}input[_ngcontent-%COMP%]{width:100%;padding:10px;margin-bottom:10px;border:1px solid #444;border-radius:6px;background-color:#1a1a1a;color:#fff;font-size:14px}input[_ngcontent-%COMP%]:focus{outline:none;border-color:#28a745}.invalido[_ngcontent-%COMP%]{border-color:#dc3545!important}.error[_ngcontent-%COMP%]{color:#dc3545;font-size:.85rem;margin-top:-6px;margin-bottom:10px}button[_ngcontent-%COMP%]{width:100%;padding:12px;background-color:#28a745;border:none;color:#fff;font-weight:700;font-size:15px;border-radius:6px;cursor:pointer;transition:background-color .2s ease}button[_ngcontent-%COMP%]:hover{background-color:#218838}p[_ngcontent-%COMP%]{margin-top:12px;text-align:center;font-weight:700;color:#000}\"]\n      });\n    }\n  }\n  return RegistroComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}