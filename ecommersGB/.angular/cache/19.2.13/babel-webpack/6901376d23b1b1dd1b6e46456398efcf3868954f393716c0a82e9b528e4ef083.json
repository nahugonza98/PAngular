{"ast":null,"code":"import { PLATFORM_ID } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { isPlatformBrowser } from '@angular/common';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./servicios/auth.service\";\nexport let AppComponent = /*#__PURE__*/(() => {\n  class AppComponent {\n    constructor(platformId, authSvc) {\n      this.platformId = platformId;\n      this.authSvc = authSvc;\n      this.title = 'ecommersGB';\n    }\n    ngOnInit() {\n      // Ejecutar solo en navegador (evita SSR)\n      if (!isPlatformBrowser(this.platformId)) return;\n      // ⚠️ Solo inicializamos Firebase; NO login anónimo.\n      // No uses await en ngOnInit; no hace falta bloquear la UI.\n    }\n    static {\n      this.ɵfac = function AppComponent_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || AppComponent)(i0.ɵɵdirectiveInject(PLATFORM_ID), i0.ɵɵdirectiveInject(i1.AuthService));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: AppComponent,\n        selectors: [[\"app-root\"]],\n        decls: 3,\n        vars: 0,\n        consts: [[1, \"container\"]],\n        template: function AppComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelement(0, \"app-navbar\");\n            i0.ɵɵelementStart(1, \"main\", 0);\n            i0.ɵɵelement(2, \"router-outlet\");\n            i0.ɵɵelementEnd();\n          }\n        },\n        dependencies: [RouterOutlet, NavbarComponent],\n        encapsulation: 2\n      });\n    }\n  }\n  return AppComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}