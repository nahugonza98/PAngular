{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport let CarritoService = /*#__PURE__*/(() => {\n  class CarritoService {\n    carrito = [];\n    constructor() {\n      this.carrito = this.cargarCarritoDesdeLocalStorage();\n    }\n    obtenerCantidadTotal() {\n      return this.carrito.reduce((total, item) => total + item.cantidad, 0);\n    }\n    agregarProducto(producto) {\n      const itemExistente = this.carrito.find(p => p.id === producto.id);\n      if (itemExistente) {\n        itemExistente.cantidad += 1;\n      } else {\n        this.carrito.push({\n          ...producto,\n          cantidad: 1\n        });\n      }\n      this.guardarCarritoEnLocalStorage();\n    }\n    modificarCantidad(idProducto, cambio) {\n      const index = this.carrito.findIndex(p => p.id === idProducto);\n      if (index !== -1) {\n        this.carrito[index].cantidad += cambio;\n        if (this.carrito[index].cantidad <= 0) {\n          this.carrito.splice(index, 1);\n        }\n        this.guardarCarritoEnLocalStorage();\n      }\n    }\n    restarProducto(producto) {\n      const item = this.carrito.find(p => p.id === producto.id);\n      if (item) {\n        item.cantidad -= 1;\n        if (item.cantidad <= 0) {\n          this.carrito = this.carrito.filter(p => p.id !== producto.id);\n        }\n        this.guardarCarritoEnLocalStorage();\n      }\n    }\n    obtenerProductos() {\n      return this.carrito;\n    }\n    obtenerTotalPrecio() {\n      return this.carrito.reduce((total, producto) => total + producto.precio * producto.cantidad, 0);\n    }\n    guardarCarritoEnLocalStorage() {\n      localStorage.setItem('carrito', JSON.stringify(this.carrito));\n    }\n    vaciarCarrito() {\n      this.carrito = [];\n      localStorage.removeItem('carrito');\n    }\n    cargarCarritoDesdeLocalStorage() {\n      if (typeof window !== 'undefined' && window.localStorage) {\n        const carritoGuardado = localStorage.getItem('carrito');\n        return carritoGuardado ? JSON.parse(carritoGuardado) : [];\n      } else {\n        return [];\n      }\n    }\n    static ɵfac = function CarritoService_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || CarritoService)();\n    };\n    static ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: CarritoService,\n      factory: CarritoService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return CarritoService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}